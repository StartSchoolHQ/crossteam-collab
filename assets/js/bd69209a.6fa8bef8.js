"use strict";(self.webpackChunkstart_school_wiki=self.webpackChunkstart_school_wiki||[]).push([[9962],{6466:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"apis/api-fetch","title":"Fetch","description":"API fetch","source":"@site/docs/apis/5.api_fetch.md","sourceDirName":"apis","slug":"/apis/api-fetch","permalink":"/crossteam-collab/docs/apis/api-fetch","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Fetch","description":"API fetch","id":"api-fetch"},"sidebar":"apiSidebar","previous":{"title":"HTTP Status codes","permalink":"/crossteam-collab/docs/apis/http-status"},"next":{"title":"API request response","permalink":"/crossteam-collab/docs/apis/req-resp"}}');var r=s(4848),a=s(8453);const i={title:"Fetch",description:"API fetch",id:"api-fetch"},c=void 0,o={},h=[{value:"Understanding fetch()",id:"understanding-fetch",level:2},{value:"What is fetch()?",id:"what-is-fetch",level:3},{value:"How fetch() works",id:"how-fetch-works",level:3},{value:"Why the dots (.then)?",id:"why-the-dots-then",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"understanding-fetch",children:"Understanding fetch()"}),"\n",(0,r.jsx)(n.p,{children:"Before we start coding, let's understand the tool we'll use to make API calls."}),"\n",(0,r.jsx)(n.h3,{id:"what-is-fetch",children:"What is fetch()?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"fetch()"})," is a JavaScript function built into modern browsers that lets you make HTTP requests to APIs. Think of it as your code's way of asking another server for data."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Basic syntax:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        // Use the data here\n    })\n    .catch(error => {\n        // Handle errors here\n    });\n"})}),"\n",(0,r.jsx)(n.h3,{id:"how-fetch-works",children:"How fetch() works"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step by step:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Make the request:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"fetch('https://api.example.com/data')\n"})}),"\n",(0,r.jsx)(n.p,{children:"Your browser sends a request to the API"}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Wait for response:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:".then(response => response.json())\n"})}),"\n",(0,r.jsx)(n.p,{children:"The API sends back data, we convert it from JSON to JavaScript"}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Use the data:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:".then(data => {\n    console.log(data);\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now you can display or use the data"}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Handle errors:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:".catch(error => {\n    console.error('Something went wrong!', error);\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"If anything fails, this catches the error"}),"\n",(0,r.jsx)(n.h3,{id:"why-the-dots-then",children:"Why the dots (.then)?"}),"\n",(0,r.jsx)(n.p,{children:"API calls take time (milliseconds to seconds). JavaScript doesn't wait - it keeps running other code."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Without fetch:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"let data = getData();  // Takes 2 seconds\nconsole.log(data);     // Runs immediately - data not ready yet!\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"With fetch and .then:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"fetch(url)\n    .then(data => {\n        console.log(data);  // Runs ONLY when data is ready\n    });\nconsole.log('This runs immediately while fetch is still loading');\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This is called ",(0,r.jsx)(n.strong,{children:"asynchronous programming"})," - doing things at the same time without waiting."]}),"\n",(0,r.jsx)(n.hr,{})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);