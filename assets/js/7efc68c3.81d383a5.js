"use strict";(self.webpackChunkstart_school_wiki=self.webpackChunkstart_school_wiki||[]).push([[1766],{8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>i});var s=t(6540);const o={},r=s.createContext(o);function a(n){const e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),s.createElement(r.Provider,{value:e},n.children)}},8467:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"apis/Task/api-task-5","title":"Part 5 | JavaScript","description":"Hands-on API practice part 5","source":"@site/docs/apis/Task/task-pt5.md","sourceDirName":"apis/Task","slug":"/apis/Task/api-task-5","permalink":"/crossteam-collab/docs/apis/Task/api-task-5","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Part 5 | JavaScript","description":"Hands-on API practice part 5","id":"api-task-5"},"sidebar":"apiSidebar","previous":{"title":"Part 4 | API calls","permalink":"/crossteam-collab/docs/apis/Task/api-task-4a"}}');var o=t(4848),r=t(8453);const a={title:"Part 5 | JavaScript",description:"Hands-on API practice part 5",id:"api-task-5"},i=void 0,c={},l=[{value:"Part 4: Add JavaScript magic",id:"part-4-add-javascript-magic",level:2},{value:"Part 5: Test your explorer",id:"part-5-test-your-explorer",level:2},{value:"Questions to answer",id:"questions-to-answer",level:2}];function d(n){const e={code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"part-4-add-javascript-magic",children:"Part 4: Add JavaScript magic"}),"\n",(0,o.jsxs)(e.p,{children:["Create ",(0,o.jsx)(e.code,{children:"script.js"})," and paste the code below."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:"// Function to show loading state\nfunction showLoading() {\n    document.getElementById('loading').classList.add('show');\n    document.getElementById('result').classList.remove('show');\n}\n\n// Function to hide loading and show result\nfunction showResult(content) {\n    document.getElementById('loading').classList.remove('show');\n    const resultDiv = document.getElementById('result');\n    resultDiv.innerHTML = content;\n    resultDiv.classList.add('show');\n}\n\n// Function to show errors\nfunction showError(message) {\n    showResult(`\n        <h2>Oops! Something went wrong</h2>\n        <p>${message}</p>\n        <p>Try clicking the button again!</p>\n    `);\n}\n\n// 1. Random Dog Picture\nfunction getRandomDog() {\n    showLoading();\n    \n    fetch('https://dog.ceo/api/breeds/image/random')\n        .then(response => response.json())\n        .then(data => {\n            showResult(`\n                <h2>Random Dog</h2>\n                <img src=\"${data.message}\" alt=\"Random dog\">\n                <p>Aww! What a cute dog!</p>\n            `);\n        })\n        .catch(error => {\n            showError('Could not fetch dog picture. The dogs are sleeping!');\n            console.error('Error:', error);\n        });\n}\n\n// 2. Random Advice\nfunction getRandomAdvice() {\n    showLoading();\n    \n    fetch('https://api.adviceslip.com/advice')\n        .then(response => response.json())\n        .then(data => {\n            showResult(`\n                <h2>Random Advice</h2>\n                <p style=\"font-size: 20px; font-style: italic; text-align: center;\">\n                    \"${data.slip.advice}\"\n                </p>\n                <p style=\"text-align: center;\">Advice #${data.slip.id}</p>\n            `);\n        })\n        .catch(error => {\n            showError('Could not fetch advice. Maybe take a break instead?');\n            console.error('Error:', error);\n        });\n}\n\n// 3. Random User\nfunction getRandomUser() {\n    showLoading();\n    \n    fetch('https://randomuser.me/api/')\n        .then(response => response.json())\n        .then(data => {\n            const user = data.results[0];\n            showResult(`\n                <h2>Random User</h2>\n                <div class=\"user-card\">\n                    <img src=\"${user.picture.large}\" alt=\"${user.name.first}\">\n                    <div class=\"user-info\">\n                        <h3>${user.name.first} ${user.name.last}</h3>\n                        <p> ${user.email}</p>\n                        <p> ${user.location.city}, ${user.location.country}</p>\n                        <p> ${user.phone}</p>\n                        <p> Age: ${user.dob.age}</p>\n                    </div>\n                </div>\n            `);\n        })\n        .catch(error => {\n            showError('Could not fetch random user. They are hiding!');\n            console.error('Error:', error);\n        });\n}\n\n// 4. Random Joke\nfunction getRandomJoke() {\n    showLoading();\n    \n    fetch('https://official-joke-api.appspot.com/random_joke')\n        .then(response => response.json())\n        .then(data => {\n            showResult(`\n                <h2>Random Joke </h2>\n                <p style=\"font-size: 18px; margin-bottom: 15px;\">\n                    <strong>${data.setup}</strong>\n                </p>\n                <p style=\"font-size: 18px; color: #667eea;\">\n                    ${data.punchline}\n                </p>\n            `);\n        })\n        .catch(error => {\n            showError('Could not fetch joke. This is no laughing matter!');\n            console.error('Error:', error);\n        });\n}\n"})}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"part-5-test-your-explorer",children:"Part 5: Test your explorer"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["Open ",(0,o.jsx)(e.code,{children:"index.html"})," in your browser"]}),"\n",(0,o.jsx)(e.li,{children:"Click each button and watch the magic happen!"}),"\n",(0,o.jsx)(e.li,{children:"Open DevTools (F12) and go to the Network tab"}),"\n",(0,o.jsx)(e.li,{children:"Click buttons again and watch the API requests"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"What to observe:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"See the API requests in the Network tab"}),"\n",(0,o.jsx)(e.li,{children:"Check the response data"}),"\n",(0,o.jsx)(e.li,{children:"Notice the JSON structure"}),"\n",(0,o.jsx)(e.li,{children:"See how fast the APIs respond"}),"\n"]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"questions-to-answer",children:"Questions to answer"}),"\n",(0,o.jsx)(e.p,{children:"After building this, answer these questions:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"What is the structure of each API response?"})," Open DevTools Network tab and look at the JSON"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Which API was fastest?"})," Check the time in Network tab"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"What happens if you click a button multiple times quickly?"})," Why?"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Where does the data come from?"})," Look at the URLs"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Could you use these APIs in a real application?"})," Why or why not?"]}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.strong,{children:"What would happen if one of these APIs went down?"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.strong,{children:"How would you handle errors if the API returns an error instead of data?"})}),"\n"]}),"\n",(0,o.jsx)(e.hr,{})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);